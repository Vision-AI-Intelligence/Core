{
  "stats": {
    "suites": 4,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2020-09-28T05:20:10.024Z",
    "end": "2020-09-28T05:20:14.895Z",
    "duration": 4871,
    "testsRegistered": 13,
    "passPercent": 84.61538461538461,
    "pendingPercent": 0,
    "other": 2,
    "hasOther": true,
    "skipped": 1,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "53fdb59a-f5ef-466f-8eb5-1df1057792c5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 741,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "config.bypass = true;\nconfig.bucketTemp = \"./test/sim/temp\";\nconfig.bucketSite = \"./test/sim/server\";\nif (!fs.existsSync(path.join(config.bucketSite, \"dummy-bucket-001\"))) {\n  fs.mkdirSync(path.join(config.bucketSite, \"dummy-bucket-001\"));\n}\nfs.copyFileSync(\n  \"./test/sim/materials/test01.txt\",\n  path.join(config.bucketSite, \"dummy-bucket-001/test01.txt\")\n);\nawait admin\n  .firestore()\n  .collection(\"projects\")\n  .doc(\"dummy-project-001\")\n  .set({\n    ownerId: \"12345\",\n    buckets: [\"dummy-bucket-001\"],\n  });",
          "err": {},
          "uuid": "50ed96ea-1274-49aa-aad1-6551d34d4730",
          "parentUUID": "53fdb59a-f5ef-466f-8eb5-1df1057792c5",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "config.bypass = true;",
          "err": {},
          "uuid": "0824c332-283c-4047-845b-bbb0bfd17982",
          "parentUUID": "53fdb59a-f5ef-466f-8eb5-1df1057792c5",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "33b0b981-931a-453a-baa6-b261003284d2",
          "title": "Test Data Validation",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\misc\\DataValidation.test.js",
          "file": "\\test\\misc\\DataValidation.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return true",
              "fullTitle": "Test Data Validation Should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n  a: 1,\n  b: 3.14,\n  c: \"Hello World\",\n};\nassert.equal(DataValidation.allNotUndefined(obj.a, obj.b, obj.c), true);",
              "err": {},
              "uuid": "5fce9996-c3c4-492a-b856-26b887d30174",
              "parentUUID": "33b0b981-931a-453a-baa6-b261003284d2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return false",
              "fullTitle": "Test Data Validation Should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n  a: 1,\n  b: 3.14,\n  c: \"Hello World\",\n};\nassert.equal(\n  DataValidation.allNotUndefined(obj.a, obj.b, obj.c, obj.d),\n  false\n);",
              "err": {},
              "uuid": "78a9d64a-c12e-472e-a02f-ead2cd561e4c",
              "parentUUID": "33b0b981-931a-453a-baa6-b261003284d2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "5fce9996-c3c4-492a-b856-26b887d30174",
            "78a9d64a-c12e-472e-a02f-ead2cd561e4c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "070be452-001f-4f66-bf38-66fd63fd391d",
          "title": "bucket.jobs",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\bucket.jobs.test.js",
          "file": "\\test\\v1\\bucket.jobs.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"bucket.jobs\"",
              "fullTitle": "bucket.jobs \"before each\" hook in \"bucket.jobs\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "config.bypass = true;\nconfig.bucketTemp = \"./test/sim/temp\";\nconfig.bucketSite = \"./test/sim/server\";\nif (!fs.existsSync(config.bucketSite + \"/dummy-bucket-001\")) {\n  fs.mkdirSync(config.bucketSite + \"/dummy-bucket-001\");\n}",
              "err": {},
              "uuid": "17d406cd-52eb-402c-a216-2aa68d979aba",
              "parentUUID": "070be452-001f-4f66-bf38-66fd63fd391d",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"bucket.jobs\"",
              "fullTitle": "bucket.jobs \"after each\" hook in \"bucket.jobs\"",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "if (fs.existsSync(config.bucketSite + \"/dummy-bucket-001\")) {\n  fs.rmdirSync(config.bucketSite + \"/dummy-bucket-001\", {\n    recursive: true,\n  });\n}",
              "err": {},
              "uuid": "84f1ff9a-7287-424a-8624-399adf5fb934",
              "parentUUID": "070be452-001f-4f66-bf38-66fd63fd391d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Download file successful",
              "fullTitle": "bucket.jobs Download file successful",
              "timedOut": false,
              "duration": 129,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let timestamp = Date.now().toString();\nlet job = await bucket.queue.downloadJob.add({\n  url:\n    \"https://archive.ics.uci.edu/ml/machine-learning-databases/00366/AReM.zip\",\n  bid: \"dummy-bucket-001\",\n  des: \"/dataset\" + timestamp,\n});\nlet isCompleted = await job.isCompleted();\nassert.equal(isCompleted, true);\nassert.equal(\n  fs.existsSync(\n    config.bucketSite + \"/dummy-bucket-001/dataset\" + timestamp\n  ),\n  true\n);",
              "err": {
                "message": "AssertionError: expected false to equal true",
                "estack": "AssertionError: expected false to equal true\n    at Context.<anonymous> (test\\v1\\bucket.jobs.test.js:28:12)\n    at processTicksAndRejections (internal/process/task_queues.js:97:5)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "33b17f19-c584-4a5b-9d9e-d92bbc575830",
              "parentUUID": "070be452-001f-4f66-bf38-66fd63fd391d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Zip successful",
              "fullTitle": "bucket.jobs Zip successful",
              "timedOut": false,
              "duration": 80,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let job = await bucket.queue.zip.add({\n  dir: \"./test/sim/client/demoFolder\",\n  output: \"./test/sim/server/dummy-bucket-001/a.zip\",\n});\njob.isCompleted().then(() => console.log(\"Completed\"));\nconsole.log(\"Done\");",
              "err": {},
              "uuid": "560a23ad-70ab-4fe8-80c2-3d8202011183",
              "parentUUID": "070be452-001f-4f66-bf38-66fd63fd391d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "560a23ad-70ab-4fe8-80c2-3d8202011183"
          ],
          "failures": [
            "33b17f19-c584-4a5b-9d9e-d92bbc575830"
          ],
          "pending": [],
          "skipped": [],
          "duration": 209,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "074daec5-21bb-4bf4-ab58-02cbdeae98bb",
          "title": "v1/bucket",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\bucket.route.test.js",
          "file": "\\test\\v1\\bucket.route.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"v1/bucket\"",
              "fullTitle": "v1/bucket \"before each\" hook in \"v1/bucket\"",
              "timedOut": false,
              "duration": 406,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create dummy project\nawait admin\n  .firestore()\n  .collection(\"projects\")\n  .doc(\"dummy-0001\")\n  .set({\n    name: \"Dummy project\",\n    description: \"This is the description\",\n    ownerId: \"12345\",\n    buckets: [\"dummy-bucket-001\"],\n  });\nawait admin.firestore().collection(\"buckets\").doc(\"dummy-bucket-001\").set({\n  bid: \"dummy-bucket-001\",\n  size: 9999999,\n  remain: 999999,\n});\nconsole.log(\"Created dummy project\");",
              "err": {},
              "uuid": "14c7e671-994e-4402-8643-a225226a92dd",
              "parentUUID": "074daec5-21bb-4bf4-ab58-02cbdeae98bb",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook for \"POST /v1/bucket/upload Sucessful\"",
              "fullTitle": "v1/bucket \"after each\" hook for \"POST /v1/bucket/upload Sucessful\"",
              "timedOut": false,
              "duration": 34,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "fs.rmdirSync(config.bucketTemp, { recursive: true });\nfs.rmdirSync(path.join(config.bucketSite, \"dummy-bucket-001\"), {\n  recursive: true,\n});\nrequester.close();\n// Delete dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").delete();\nawait admin\n  .firestore()\n  .collection(\"buckets\")\n  .doc(\"dummy-bucket-001\")\n  .delete();",
              "err": {
                "message": "AssertionError: expected false to equal true",
                "estack": "AssertionError: expected false to equal true\n    at D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\bucket.route.test.js:66:16\n    at Test.Request.callback (node_modules\\superagent\\lib\\node\\index.js:728:3)\n    at ClientRequest.<anonymous> (node_modules\\superagent\\lib\\node\\index.js:647:10)\n    at Socket.socketErrorListener (_http_client.js:426:9)\n    at errorOrDestroy (internal/streams/destroy.js:108:12)\n    at onwriteError (_stream_writable.js:456:5)\n    at onwrite (_stream_writable.js:483:5)\n    at internal/streams/destroy.js:50:7\n    at Socket._destroy (net.js:673:5)\n    at Socket.destroy (internal/streams/destroy.js:38:8)\n    at afterWriteDispatched (internal/stream_base_commons.js:154:17)\n    at writeGeneric (internal/stream_base_commons.js:145:3)\n    at Socket._writeGeneric (net.js:780:11)\n    at Socket._write (net.js:792:8)\n    at doWrite (_stream_writable.js:441:12)\n    at clearBuffer (_stream_writable.js:580:7)\n    at Socket.Writable.uncork (_stream_writable.js:336:7)\n    at ClientRequest.OutgoingMessage.uncork (_http_outgoing.js:244:17)\n    at connectionCorkNT (_http_outgoing.js:698:8)\n    at processTicksAndRejections (internal/process/task_queues.js:84:21)",
                "diff": "- false\n+ true\n"
              },
              "uuid": "0b5bdee9-a8a4-44ee-8158-786119398e9a",
              "parentUUID": "074daec5-21bb-4bf4-ab58-02cbdeae98bb",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "POST /v1/bucket/upload Sucessful",
              "fullTitle": "v1/bucket POST /v1/bucket/upload Sucessful",
              "timedOut": false,
              "duration": 5,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\n    \"/v1/bucket/upload?dummyUid=12345&dummyEmail=teo@gmail.com&pid=dummy-0001&bid=dummy-bucket-001&d=/\"\n  )\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", \"./test/sim/client/test01.txt\")\n  .end((err, res) => {\n    if (err) {\n      console.log(err);\n    }\n    assert.equal(\n      fs.existsSync(\"./test/sim/server/dummy-bucket-001/test01.txt\"),\n      true\n    );\n  });",
              "err": {},
              "uuid": "1a06686c-6f15-42fc-852c-dbd395a8558f",
              "parentUUID": "074daec5-21bb-4bf4-ab58-02cbdeae98bb",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "GET /v1/bucket/download Download file sucessful",
              "fullTitle": "v1/bucket GET /v1/bucket/download Download file sucessful",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .get(\n    \"/v1/bucket/download?dummyUid=12345&dummyEmail=teo@gmail.com&pid=dummy-project-001&bid=dummy-bucket-001&f=/dummy-bucket-001/test01.txt\"\n  )\n  .end((err, res) => {\n    console.log(res.header);\n  });",
              "err": {},
              "uuid": "9e10d258-90aa-407d-8333-639dc5b59144",
              "parentUUID": "074daec5-21bb-4bf4-ab58-02cbdeae98bb",
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [
            "1a06686c-6f15-42fc-852c-dbd395a8558f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [
            "9e10d258-90aa-407d-8333-639dc5b59144"
          ],
          "duration": 5,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
          "title": "v1/projects",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\projects.route.test.js",
          "file": "\\test\\v1\\projects.route.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"v1/projects\"",
              "fullTitle": "v1/projects \"before each\" hook in \"v1/projects\"",
              "timedOut": false,
              "duration": 167,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").set({\n  name: \"Dummy project\",\n  description: \"This is the description\",\n  ownerId: \"12345\",\n});\nconsole.log(\"Created dummy project\");",
              "err": {},
              "uuid": "dbd9fe98-b60c-4a50-99da-e01154b9a1af",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"v1/projects\"",
              "fullTitle": "v1/projects \"after all\" hook in \"v1/projects\"",
              "timedOut": false,
              "duration": 304,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester.close();\n// Delete dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").delete();\nawait admin.firestore().collection(\"projects\").doc(\"PROJECT-01\").delete();\nconsole.log(\"Deleted dummy project\\n\");",
              "err": {},
              "uuid": "f51e2e3b-4292-45b7-a2f1-e1c16332bd02",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "GET",
              "fullTitle": "v1/projects GET",
              "timedOut": false,
              "duration": 286,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .get(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end((err, res) => {\n    const { projects } = res.body;\n    res.should.has.status(200);\n    assert.notEqual(projects.length, 0);\n    console.log(projects);\n    done();\n  });",
              "err": {},
              "uuid": "fa28fd0c-aeb4-45b8-8679-371f7e6709b5",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST with error",
              "fullTitle": "v1/projects POST with error",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    name: \"Project 01\",\n    description: \"Description 01\",\n  })\n  .end((err, res) => {\n    res.should.has.status(404);\n    done();\n  });",
              "err": {},
              "uuid": "d010a6da-c67e-4fcd-abe0-0b1410cc676e",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST without error",
              "fullTitle": "v1/projects POST without error",
              "timedOut": false,
              "duration": 390,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    id: \"PROJECT-01\",\n    name: \"Project 01\",\n    description: \"Description 01\",\n  })\n  .end((err, res) => {\n    assert.equal(res.status, 201);\n    done();\n  });",
              "err": {},
              "uuid": "80a45895-262c-44e1-89ff-c90cda93c291",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT without error",
              "fullTitle": "v1/projects PUT without error",
              "timedOut": false,
              "duration": 537,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .put(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    pid: \"dummy-0001\",\n    name: \"Project XXX\",\n    description: \"Description XXX\",\n  })\n  .then(async function (res) {\n    expect(res.status).to.equal(200);\n    let projectDoc = await admin\n      .firestore()\n      .collection(\"projects\")\n      .doc(\"dummy-0001\")\n      .get();\n    let data = projectDoc.data();\n    expect(data).to.has.property(\"name\", \"Project XXX\");\n    done();\n  });",
              "err": {},
              "uuid": "a52ae787-f529-4110-a978-28b71e60c7da",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT with error",
              "fullTitle": "v1/projects PUT with error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .put(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    name: \"Project XXX\",\n    description: \"Description XXX\",\n  })\n  .end((err, res) => {\n    expect(res.status).to.equal(404);\n  });",
              "err": {},
              "uuid": "04386c53-6556-431a-a248-b7ac6c46f0bf",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE not existed project",
              "fullTitle": "v1/projects DELETE not existed project",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .delete(\"/v1/projects?pid=PROJECT-XXXXXXXXXX\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end((err, res) => {\n    expect(res.status).to.equal(404);\n  });",
              "err": {},
              "uuid": "c4f6246f-b107-49ad-bd26-c70c40fbb6c4",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "DELETE existed project",
              "fullTitle": "v1/projects DELETE existed project",
              "timedOut": false,
              "duration": 401,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .delete(\"/v1/projects?pid=dummy-0001\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end(async (err, res) => {\n    let doc = await admin\n      .firestore()\n      .collection(\"projects\")\n      .doc(\"dummy-0001\")\n      .get();\n    let d = doc.data();\n    expect((await doc).exists).to.equal(false);\n    done();\n  });",
              "err": {},
              "uuid": "db4028f8-d96a-4d88-8f2d-093be4a84f11",
              "parentUUID": "c8cabb21-a9ec-4abd-a0cf-f573228388c2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fa28fd0c-aeb4-45b8-8679-371f7e6709b5",
            "d010a6da-c67e-4fcd-abe0-0b1410cc676e",
            "80a45895-262c-44e1-89ff-c90cda93c291",
            "a52ae787-f529-4110-a978-28b71e60c7da",
            "04386c53-6556-431a-a248-b7ac6c46f0bf",
            "c4f6246f-b107-49ad-bd26-c70c40fbb6c4",
            "db4028f8-d96a-4d88-8f2d-093be4a84f11"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1620,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}