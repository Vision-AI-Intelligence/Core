{
  "stats": {
    "suites": 0,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2020-09-24T02:33:55.906Z",
    "end": "2020-09-24T02:33:55.910Z",
    "duration": 4,
    "testsRegistered": 12,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 12,
    "hasSkipped": true
  },
  "results": [
    {
      "uuid": "ce3a5b71-b656-45fa-bdef-3e7e778fbbd2",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook",
          "fullTitle": "\"before all\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "config.bypass = true;\nconfig.bucketTemp = \"./test/sim/temp\";\nconfig.bucketSite = \"./test/sim/server\";",
          "err": {},
          "uuid": "34be36c9-76ca-4370-b408-6933402968a1",
          "parentUUID": null,
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook",
          "fullTitle": "\"before all\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "config.bypass = true;\nconfig.bucketTemp = \"./test/sim/temp\";\nconfig.bucketSite = \"./test/sim/server\";",
          "err": {},
          "uuid": "6f6c46a7-daf7-4a01-94d2-460a30972d5b",
          "parentUUID": null,
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook",
          "fullTitle": "\"before all\" hook",
          "timedOut": false,
          "duration": 0,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "config.bypass = true;",
          "err": {},
          "uuid": "931814d4-bbae-4e84-ac83-a1ded4df4e95",
          "parentUUID": null,
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "83a20092-4f3c-40e9-8d01-26fef1835ea0",
          "title": "Test Data Validation",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\misc\\DataValidation.test.js",
          "file": "\\test\\misc\\DataValidation.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return true",
              "fullTitle": "Test Data Validation Should return true",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n  a: 1,\n  b: 3.14,\n  c: \"Hello World\",\n};\nassert.equal(DataValidation.allNotUndefined(obj.a, obj.b, obj.c), true);",
              "err": {},
              "uuid": "b8eac5e2-241c-4768-8942-1fe5990b624d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Should return false",
              "fullTitle": "Test Data Validation Should return false",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n  a: 1,\n  b: 3.14,\n  c: \"Hello World\",\n};\nassert.equal(\n  DataValidation.allNotUndefined(obj.a, obj.b, obj.c, obj.d),\n  false\n);",
              "err": {},
              "uuid": "2913b334-ead4-492c-ac45-cdee9dbd7282",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "b8eac5e2-241c-4768-8942-1fe5990b624d",
            "2913b334-ead4-492c-ac45-cdee9dbd7282"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "1ec24ac0-9b63-44e4-a560-bbcd252ea288",
          "title": "bucket.jobs",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\bucket.jobs.test.js",
          "file": "\\test\\v1\\bucket.jobs.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Download file successful",
              "fullTitle": "bucket.jobs Download file successful",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "bucket.queue.downloadJob.add({\n  url:\n    \"https://archive.ics.uci.edu/ml/machine-learning-databases/00366/AReM.zip\",\n  bid: \"dummy-bucket-001\",\n  des: \"/dataset.tgz\" + Date.now(),\n});",
              "err": {},
              "uuid": "66bc32d7-c9ed-41a9-b46f-29fab8369065",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "Zip successful",
              "fullTitle": "bucket.jobs Zip successful",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let job = await bucket.queue.zip.add({\n  dir: \"./test/sim/client/demoFolder\",\n  output: \"./test/sim/server/dummy-bucket-001/a.zip\",\n});\njob.isCompleted().then(() => console.log(\"Completed\"));\nconsole.log(\"Done\");",
              "err": {},
              "uuid": "172fea95-09d8-48a2-b776-bf842c70bb77",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "66bc32d7-c9ed-41a9-b46f-29fab8369065",
            "172fea95-09d8-48a2-b776-bf842c70bb77"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "69a74e2b-6bee-42cd-b4b4-f66834265cd9",
          "title": "v1/bucket",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\bucket.route.test.js",
          "file": "\\test\\v1\\bucket.route.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "v1/bucket \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create dummy project\nawait admin\n  .firestore()\n  .collection(\"projects\")\n  .doc(\"dummy-0001\")\n  .set({\n    name: \"Dummy project\",\n    description: \"This is the description\",\n    ownerId: \"12345\",\n    buckets: [\"dummy-bucket-001\"],\n  });\nawait admin.firestore().collection(\"buckets\").doc(\"dummy-bucket-001\").set({\n  bid: \"dummy-bucket-001\",\n  size: 9999999,\n  remain: 999999,\n});\nconsole.log(\"Created dummy project\");",
              "err": {},
              "uuid": "2d503d53-3c4c-4fb5-8385-c3fe9ff35f33",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook",
              "fullTitle": "v1/bucket \"after each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.rmdirSync(config.bucketTemp, { recursive: true });\nfs.rmdirSync(path.join(config.bucketSite, \"dummy-bucket-001\"), {\n  recursive: true,\n});\nrequester.close();\n// Delete dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").delete();\nawait admin\n  .firestore()\n  .collection(\"buckets\")\n  .doc(\"dummy-bucket-001\")\n  .delete();",
              "err": {},
              "uuid": "7003123d-ec5a-4130-bf73-e2666b13b257",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "POST /v1/bucket/upload Sucessful",
              "fullTitle": "v1/bucket POST /v1/bucket/upload Sucessful",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\n    \"/v1/bucket/upload?dummyUid=12345&dummyEmail=teo@gmail.com&pid=dummy-0001&bid=dummy-bucket-001&d=/\"\n  )\n  .set(\"Content-Type\", \"application/x-www-form-urlencoded\")\n  .attach(\"file\", \"./test/sim/client/test01.txt\")\n  .end((err, res) => {\n    if (err) {\n      console.log(err);\n    }\n    assert.equal(\n      fs.existsSync(\"./test/sim/server/dummy-bucket-001/test01.txt\"),\n      true\n    );\n  });",
              "err": {},
              "uuid": "baee1ce5-5c78-4be8-9639-0d81746b690d",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "baee1ce5-5c78-4be8-9639-0d81746b690d"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "f48c7601-167f-418c-bbaa-42e6cb44fed6",
          "title": "v1/projects",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\projects.route.test.js",
          "file": "\\test\\v1\\projects.route.test.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook",
              "fullTitle": "v1/projects \"before each\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").set({\n  name: \"Dummy project\",\n  description: \"This is the description\",\n  ownerId: \"12345\",\n});\nconsole.log(\"Created dummy project\");",
              "err": {},
              "uuid": "95b5a27d-a909-4839-9b1b-ca303842605e",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook",
              "fullTitle": "v1/projects \"after all\" hook",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester.close();\n// Delete dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").delete();\nawait admin.firestore().collection(\"projects\").doc(\"PROJECT-01\").delete();\nconsole.log(\"Deleted dummy project\\n\");",
              "err": {},
              "uuid": "c3e7bb07-1230-4b40-99b0-ab9615d36590",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "GET",
              "fullTitle": "v1/projects GET",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .get(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end((err, res) => {\n    const { projects } = res.body;\n    res.should.has.status(200);\n    assert.notEqual(projects.length, 0);\n    console.log(projects);\n    done();\n  });",
              "err": {},
              "uuid": "ccb264c8-6caf-4966-ad98-b4b4a371d26a",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "POST with error",
              "fullTitle": "v1/projects POST with error",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    name: \"Project 01\",\n    description: \"Description 01\",\n  })\n  .end((err, res) => {\n    res.should.has.status(404);\n    done();\n  });",
              "err": {},
              "uuid": "dabfc504-2764-430a-a420-84a6e5f4f143",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "POST without error",
              "fullTitle": "v1/projects POST without error",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    id: \"PROJECT-01\",\n    name: \"Project 01\",\n    description: \"Description 01\",\n  })\n  .end((err, res) => {\n    assert.equal(res.status, 201);\n    done();\n  });",
              "err": {},
              "uuid": "3f2f058f-0c5c-4b26-9d93-39c4c1b8e0da",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "PUT without error",
              "fullTitle": "v1/projects PUT without error",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .put(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    pid: \"dummy-0001\",\n    name: \"Project XXX\",\n    description: \"Description XXX\",\n  })\n  .then(async function (res) {\n    expect(res.status).to.equal(200);\n    let projectDoc = await admin\n      .firestore()\n      .collection(\"projects\")\n      .doc(\"dummy-0001\")\n      .get();\n    let data = projectDoc.data();\n    expect(data).to.has.property(\"name\", \"Project XXX\");\n    done();\n  });",
              "err": {},
              "uuid": "27caa202-c98c-4d59-806d-ac7a996aa959",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "PUT with error",
              "fullTitle": "v1/projects PUT with error",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .put(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    name: \"Project XXX\",\n    description: \"Description XXX\",\n  })\n  .end((err, res) => {\n    expect(res.status).to.equal(404);\n  });",
              "err": {},
              "uuid": "2950418c-419f-4e12-a5f0-8943427d029f",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "DELETE not existed project",
              "fullTitle": "v1/projects DELETE not existed project",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .delete(\"/v1/projects?pid=PROJECT-XXXXXXXXXX\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end((err, res) => {\n    expect(res.status).to.equal(404);\n  });",
              "err": {},
              "uuid": "bf8b5376-5bbb-428b-9365-8a14331e2af1",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            },
            {
              "title": "DELETE existed project",
              "fullTitle": "v1/projects DELETE existed project",
              "timedOut": false,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .delete(\"/v1/projects?pid=dummy-0001\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end(async (err, res) => {\n    let doc = await admin\n      .firestore()\n      .collection(\"projects\")\n      .doc(\"dummy-0001\")\n      .get();\n    let d = doc.data();\n    expect((await doc).exists).to.equal(false);\n    done();\n  });",
              "err": {},
              "uuid": "7400d0cb-cc32-43dd-a90d-aece19f69cc6",
              "parentUUID": null,
              "isHook": false,
              "skipped": true
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [
            "ccb264c8-6caf-4966-ad98-b4b4a371d26a",
            "dabfc504-2764-430a-a420-84a6e5f4f143",
            "3f2f058f-0c5c-4b26-9d93-39c4c1b8e0da",
            "27caa202-c98c-4d59-806d-ac7a996aa959",
            "2950418c-419f-4e12-a5f0-8943427d029f",
            "bf8b5376-5bbb-428b-9365-8a14331e2af1",
            "7400d0cb-cc32-43dd-a90d-aece19f69cc6"
          ],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}