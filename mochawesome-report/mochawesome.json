{
  "stats": {
    "suites": 2,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2020-09-18T05:09:38.495Z",
    "end": "2020-09-18T05:09:39.874Z",
    "duration": 1379,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "218f64e9-9d83-471e-8e3e-7be995b2affb",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "config.bypass = true;",
          "err": {},
          "uuid": "b9a261c1-d1c1-4777-800c-ac773d1889b2",
          "parentUUID": "218f64e9-9d83-471e-8e3e-7be995b2affb",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4d0dca80-a664-404d-be2d-6ac582db375c",
          "title": "Test Data Validation",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\misc\\DataValidation.test.js",
          "file": "\\test\\misc\\DataValidation.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Should return true",
              "fullTitle": "Test Data Validation Should return true",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n  a: 1,\n  b: 3.14,\n  c: \"Hello World\",\n};\nassert.equal(DataValidation.allNotUndefined(obj.a, obj.b, obj.c), true);",
              "err": {},
              "uuid": "1a7ddb80-7680-4801-ae06-62ce5efcd9b9",
              "parentUUID": "4d0dca80-a664-404d-be2d-6ac582db375c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Should return false",
              "fullTitle": "Test Data Validation Should return false",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let obj = {\n  a: 1,\n  b: 3.14,\n  c: \"Hello World\",\n};\nassert.equal(\n  DataValidation.allNotUndefined(obj.a, obj.b, obj.c, obj.d),\n  false\n);",
              "err": {},
              "uuid": "cd3b0204-2e03-4867-a5b6-9fea02e781a3",
              "parentUUID": "4d0dca80-a664-404d-be2d-6ac582db375c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a7ddb80-7680-4801-ae06-62ce5efcd9b9",
            "cd3b0204-2e03-4867-a5b6-9fea02e781a3"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        },
        {
          "uuid": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
          "title": "v1/projects",
          "fullFile": "D:\\Repos\\VideoIntelligence\\Core\\test\\v1\\projects.route.test.js",
          "file": "\\test\\v1\\projects.route.test.js",
          "beforeHooks": [
            {
              "title": "\"before all\" hook in \"v1/projects\"",
              "fullTitle": "v1/projects \"before all\" hook in \"v1/projects\"",
              "timedOut": false,
              "duration": 550,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Create dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").set({\n  name: \"Dummy project\",\n  description: \"This is the description\",\n  ownerId: \"12345\",\n});\nconsole.log(\"Created dummy project\");",
              "err": {},
              "uuid": "77f976f4-4c33-4c1f-bad6-b1c50d51c6dc",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"v1/projects\"",
              "fullTitle": "v1/projects \"after all\" hook in \"v1/projects\"",
              "timedOut": false,
              "duration": 370,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester.close();\n// Delete dummy project\nawait admin.firestore().collection(\"projects\").doc(\"dummy-0001\").delete();\nawait admin.firestore().collection(\"projects\").doc(\"PROJECT-01\").delete();\nconsole.log(\"Deleted dummy project\\n\");",
              "err": {},
              "uuid": "fba56d58-f759-471e-b209-b43ae97f7bfc",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "GET",
              "fullTitle": "v1/projects GET",
              "timedOut": false,
              "duration": 214,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .get(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n  })\n  .end((err, res) => {\n    const { projects } = res.body;\n    res.should.has.status(200);\n    assert.notEqual(projects.length, 0);\n    console.log(projects);\n    done();\n  });",
              "err": {},
              "uuid": "6d9e3d2f-cbb5-450a-ad88-c5828cb13314",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST with error",
              "fullTitle": "v1/projects POST with error",
              "timedOut": false,
              "duration": 4,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    name: \"Project 01\",\n    description: \"Description 01\",\n  })\n  .end((err, res) => {\n    res.should.has.status(404);\n    done();\n  });",
              "err": {},
              "uuid": "59a8f1ec-f485-46b8-a19c-34cc288247a8",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "POST without error",
              "fullTitle": "v1/projects POST without error",
              "timedOut": false,
              "duration": 172,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .post(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    id: \"PROJECT-01\",\n    name: \"Project 01\",\n    description: \"Description 01\",\n  })\n  .end((err, res) => {\n    assert.equal(res.status, 201);\n    done();\n  });",
              "err": {},
              "uuid": "390e6f8c-7357-41ee-8c95-10487ac2fede",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT without error",
              "fullTitle": "v1/projects PUT without error",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .put(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    pid: \"dummy-0001\",\n    name: \"Project XXX\",\n    description: \"Description XXX\",\n  })\n  .end(async function (err, res) {\n    assert.equal(res.status, 200);\n    let projectDoc = await admin\n      .firestore()\n      .collection(\"projects\")\n      .doc(\"dummy-0001\")\n      .get();\n    let data = projectDoc.data();\n    expect(data).to.has.property(\"name\", \"Project XXX\");\n  });",
              "err": {},
              "uuid": "7212ed97-0a7d-48a0-993f-b2780cac5837",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "PUT with error",
              "fullTitle": "v1/projects PUT with error",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "requester\n  .put(\"/v1/projects\")\n  .set(\"content-type\", \"application/json\")\n  .send({\n    dummy: {\n      uid: \"12345\",\n      email: \"Nguyen Van Teo\",\n    },\n    name: \"Project XXX\",\n    description: \"Description XXX\",\n  })\n  .end((err, res) => {\n    expect(res.status).to.equal(404);\n  });",
              "err": {},
              "uuid": "782e941e-cd41-4617-8fa1-810dafbe180d",
              "parentUUID": "a0a56e1c-4c5b-4729-855e-c5956cd24420",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6d9e3d2f-cbb5-450a-ad88-c5828cb13314",
            "59a8f1ec-f485-46b8-a19c-34cc288247a8",
            "390e6f8c-7357-41ee-8c95-10487ac2fede",
            "7212ed97-0a7d-48a0-993f-b2780cac5837",
            "782e941e-cd41-4617-8fa1-810dafbe180d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 391,
          "root": false,
          "rootEmpty": false,
          "_timeout": 10000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 10000
    }
  ],
  "meta": {
    "mocha": {
      "version": "8.1.3"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "6.1.1"
    },
    "marge": {
      "options": null,
      "version": "5.1.0"
    }
  }
}